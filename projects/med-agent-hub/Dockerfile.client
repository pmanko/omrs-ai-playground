# Dockerfile for Multi-Agent Chat Client
FROM node:18-alpine as build

WORKDIR /app
COPY web/ /app/
RUN corepack enable && corepack prepare pnpm@9.12.2 --activate && pnpm i --frozen-lockfile || npm i && \
    (pnpm build || npm run build)

FROM nginx:alpine

LABEL maintainer="Multi-Agent Chat Team"
LABEL version="1.0"
LABEL description="Multi-Agent Medical Chat Client - Static Web UI"

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built client files
COPY --from=build /app/dist/ /usr/share/nginx/html/

# Create custom error pages
RUN echo '<!DOCTYPE html><html><head><title>404 Not Found</title></head><body><h1>404 - Page Not Found</h1><p>The requested resource could not be found.</p><p><a href="/">Return to Home</a></p></body></html>' > /usr/share/nginx/html/404.html && \
    echo '<!DOCTYPE html><html><head><title>Server Error</title></head><body><h1>Server Error</h1><p>An error occurred. Please try again later.</p><p><a href="/">Return to Home</a></p></body></html>' > /usr/share/nginx/html/50x.html

# Ensure proper permissions
RUN chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /usr/share/nginx/html

# Copy entrypoint script to avoid line-ending issues
COPY client-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Run nginx
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
