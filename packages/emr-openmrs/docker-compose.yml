services:
  openmrs:
    image: openmrs/openmrs-reference-application-3-backend:${TAG:-qa}
    restart: "unless-stopped"
    depends_on:
      - db
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data
  
  db:
    image: ${MYSQL_IMAGE}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --sql_mode=""
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PW}
      - MYSQL_ROOT_HOST=% # Allow docker containers to connect to mysql
      - MYSQL_DATABASE=${MYSQL_DATABASE:-openmrs}
      - MYSQL_USER=${MYSQL_USER:-openmrs}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-openmrs}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-openmrs}
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  openmrs-data:
  mysql_data:

networks:
  default:
    name: instant
    external: true
